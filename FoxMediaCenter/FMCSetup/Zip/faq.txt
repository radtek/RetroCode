Please read the documentation instead of this documment (it may be difficult to read
it due to formatting tags for an automatic documentation generation).
If you do not have it, download it from	http://software.artpol.com.pl

/** \page pageFaq FAQ


<A HREF="#q1">	
Q: I experience linking problems. What to do?
</A>


<A HREF="#q2">	
Q: When I open a multi-disk archive (Pkzip mode) and the last disk is not in 
	the drive, I receive the CZipException::cdirNotFound exception. How to detect 
	whether the last disk is in the drive?
</A>

<A HREF="#q3">	
Q: Of what size should be a single volume in a multi-disk archive created in
the TD span mode ?
</A>

<A HREF="#q4">	
Q: How can I pass my structures(e.g. for the progress information) to the callback functions ?
</A>

<A HREF="#q5">	
Q: How can I detect the disk spanning mode of an archive?
</A>

<A HREF="#q6">	
Q: What string should I pass to CZipArchive::FindFile?
</A>

<A HREF="#q7">	
Q: How to integrate the library with the sample application?
</A>

<A HREF="#q8">	
Q: Why the library doesn't want to extract archives (mostly old)?
</A>

<A HREF="#q9">	
Q: In CZipArchive::AddNewFile and CZipArchive::ExtractFile I want to use partial
path for the filename inside the archive.
</A>

<A HREF="#q10">	
Q: I want to create an archive that will be readable under Unix/Linux.
</A>



<HR>
*****************************************************************************
\anchor q1
<B>
Q: I experience linking problems. What to do?
</B>

A: You may need to adjust a project settings. Please see the section \ref secLink for the details.


\anchor q2
<B>
Q: When I open a multi-disk archive (Pkzip mode) and the last disk is not in 
	the drive, I receive the CZipException::cdirNotFound exception. How to detect 
	whether the last disk is in the drive?
</B>

A: The last disk can not be detected before opening an archive. The only way to 
prevent the program from failing when an incorrect disk is inserted is to 
catch the CZipException::cdirNotFound exception and keep prompting the user to 
insert the last disk into the drive. Please see the sample application on how 
it can be done in details.

\anchor q3
<B>
Q: Of what size should be a single volume in a multi-disk archive created in
the TD span mode ?
</B>

A: The size of the volume may be from 1 byte to the maximum integer value, and the bigger - the
 faster is creation and extraction (no file changes meantime), but the size 
 of the whole archive is the same. The optimal solution is to set it to about 
 the size of the diskette (a little less) to allow the future convertion to PKZIP span mode.

\anchor q4
<B>
Q: How can I pass my structures (e.g. for the progress information) to the callback functions ?
</B>

A: Pass it as a pointer. To set it for changing disk callback function, pass it as a 
second parameter of CZipArchive::SetSpanCallback. To use it in compress/extract callback
functions pass it as \e pUserData parameter of CZipArchive::AddNewFile or CZipArchive::ExtractFile.
Please refer to the sample application for the details.

\anchor q5
<B>
Q: How can I detect the disk spanning mode of an archive?
</B>

A: You need to open the archive and the call CZipArchive::GetSpanMode. You should pay attention to 
one matter however. When opening the archive in tdSpan mode on a removable device,
you should set \e iVolumeSize to a non-zero value while opening the archive (with
CZipArchive::Open). There is no universal way to distinguish a PKSpan archive from a TDSpan archive 
on a removable device, because they have identical internal structure.

\anchor q6
<B>
Q: What string should I pass to CZipArchive::FindFile?
</B>

A: The filename exactly as it appears in the archive (maybe case sensitive or not, depending on 
the second parameter) - if the file is stored with a path, you should pass it as well 
(without the drive letter and the beginning slash usually).

\anchor q7
<B>
Q: How to integrate the library with the sample application?
</B>

A:The usual way is to put ZipArchive library at the same directory level what your
project is, and then use one of the \ref sectVisual "integration methods".
Make a directory structure like this: <BR>
\htmlonly
--- <BR>
&nbsp &nbsp |-TestZipDlg &nbsp &nbsp &nbsp &nbsp // the application project <BR>
&nbsp &nbsp |-ZipArchive &nbsp &nbsp &nbsp &nbsp // ZipArchive library <BR>
\endhtmlonly

You can now follow the integration method 1 or 2 (which is easier one).

\anchor q8
<B>
Q: Why the library doesn't want to extract archives (mostly old)?
</B>

A: Please see the section \ref secImploded for the details.

\anchor q9
<B>
Q: In CZipArchive::AddNewFile and CZipArchive::ExtractFile I want to use partial
path for the filename inside the archive. For example:<BR>
When I compress some directory, like this:
<em> c:\program files\example</em> (full directory path: <em>c:\program files\example\text\txt</em>)
 it comes with the whole path. I would like that the zip only get the <em>EXAMPLE\text\txt path</em>.

</B>

A: You can set \e bFullPath argument to \c false in these functions and set 
the beginning part of the path that you commonly want to eliminate with 
CZipArchive::SetRootPath function. In the example above you'd set it to 
<em>c:\program files\ </em> (the path separator at the end is added automaticaly).

\anchor q10
<B>
Q: I want to create an archive that will be readable under Unix/Linux.
</B>

A: Inside the archive there is an information stored about the system it was
created under. It helps converting the file attributes that are stored inside
the archive to file attributes that are used on the system on which the file is extracted.
Some Unix archivers cannot convert Windows attributes to Unix, so that it is needed
to create the archive with the Unix attributes already (and the internal info about the
system set to a Unix value). To achieve that, simply call CZipArchive::SetSystemCompatibility
with the argument set to ZipCompatibility::zcUnix.
after creating the archive.

*/