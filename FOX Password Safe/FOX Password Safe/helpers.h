
void DebugMessage(CString strFile);
CString	MyGetProfileString(CString strTag, CString strDefault, DWORD dwMaxChars=4028);
DWORD MyGetProfileInt(CString strTag, DWORD dwDefault);
BOOL MyWriteProfileInt(CString strTag, DWORD dwValuse);
BOOL MyWriteProfileString(CString strTag, CString strValue);
CString ReadEncryptedFile(CString strPath,CString strKey);
BOOL WriteEncryptedFile(CString strPath,CString strKey,CString strData);
CString ParseXML(CString strTag,CString strParams);
CString ReplaceXML(CString strParam,CString strTag,CString strParams);
BOOL IsRegCodeGood(CString strReg);
BOOL IsRegistered();
int GetFreeTrialDaysUsed();
BOOL DirectoryExists(CString strPath);
BOOL FileExists(CString strPath);
BOOL MyMakePath(CString strPath);
void MarkFileNormal(CString strPath);
BOOL SaveDatabase(CString strFilePath, CString strData);
CString ConvertToDateString(CString strDateInt,BOOL &bHasExpired);
CString GetDefaultBrowserPath();
void LoadURLInBrowser(CString strURL);
BOOL IsWindowsNT4();
void SetAutoStartExe(BOOL bAutoStart);
BOOL CanShowExpiredDlg();
CString GetRegisterURL();
CStringArray* LoadEntries(CString strData,BOOL& bRemovedExtras);
CString GetGUID();
BOOL EncryptFile(CString strData);
BOOL UnEncryptFile(CString strData,BOOL bDeleteFile=true);
char* EncryptBuffer(char* pBuf, DWORD& dwSize, CString strKey);
char* UnEncryptBuffer(char* pBufEnc, DWORD& dwSize, CString strKey);
BOOL IsEncryptedFileEntry(CString strData);
BOOL IsFileEncrypted(CString strData);
BOOL IsBadFileEntry(CString strData);
CString MakeTextSafeForXML(CString strText);